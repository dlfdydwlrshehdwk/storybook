"use strict";
globalThis["webpackHotUpdatestorybook"]("stories-mbtiRadio-stories",{

/***/ "./src/stories/mbtiRadio.stories.jsx":
/*!*******************************************!*\
  !*** ./src/stories/mbtiRadio.stories.jsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_form_mbtiRadio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/form/mbtiRadio */ "./src/components/form/mbtiRadio.jsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "C:\\Users\\withere\\OneDrive\\\uBC14\uD0D5 \uD654\uBA74\\\uB0B4\uAE43\\storybook\\storybook\\src\\stories\\mbtiRadio.stories.jsx";
// 스토리북 기본양식
 // 컴포넌트 경로

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  component: _components_form_mbtiRadio__WEBPACK_IMPORTED_MODULE_0__["default"],
  // 임포트한 컴포넌트 이름
  title: 'mbtiRadio',
  // 스토리북에서 보일 이름
  argTypes: {
    // 각 스토리 args의 행동방식을 설정
    width: {
      control: "text"
    },
    id: {
      control: "number"
    },
    placeholder: {
      control: "text"
    },
    disabled: {
      control: "boolean"
    },
    value: {
      control: "text"
    },
    onChange: {
      action: "onChange"
    }
  } // 타입지정
});
const Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("mbtiRadio", {
  ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 17,
  columnNumber: 26
}, undefined); // 템플릿 기본셋팅
_c = Template;
const Default = Template.bind({});
Default.args = {};
var _c;
__webpack_require__.$Refresh$.register(_c, "Template");
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "args => <mbtiRadio {...args} />",
      ...Default.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["Default"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/form/mbtiRadio.jsx":
/*!*******************************************!*\
  !*** ./src/components/form/mbtiRadio.jsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ mbtiRadio)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");



function mbtiRadio({
  // 받아올 prop값들 객체형식으로 적기, 이곳에 값을 지정하면 스토리북에서 default값으로 지정이된다.
  // ex ) width = "100%" 하면 기본값은 100%로 설정 프롭값이 따로 들어오기전까진 100%로 사용됨. 
  // 프롭값을 받아 style객체에 넣고 return에서 스타일값을 인라인으로 넣어주면 적용됨
}) {
  const style = {
    // 스타일 컴포넌트처럼 받아온 프롭들을 값 셋팅을 해준다.
    // width,
    // fontSize
  };
  return (
    /*#__PURE__*/
    // 예시코드
    // <button onClick={onClick} style={style} className={cls}>{label} </button>
    (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false)
  );
}
mbtiRadio.stories.propTypes = {
  // prop1 : PropTypes.string // 프롭타입.타입
};
mbtiRadio.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "mbtiRadio"
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=stories-mbtiRadio-stories.0e812c5fbbebc58868fd.hot-update.js.map