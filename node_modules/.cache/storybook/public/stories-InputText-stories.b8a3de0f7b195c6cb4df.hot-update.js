"use strict";
globalThis["webpackHotUpdatestorybook"]("stories-InputText-stories",{

/***/ "./src/components/form/InputText.jsx":
/*!*******************************************!*\
  !*** ./src/components/form/InputText.jsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ InputText)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module '../'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "C:\\Users\\withere\\OneDrive\\\uBC14\uD0D5 \uD654\uBA74\\\uB0B4\uAE43\\storybook\\storybook\\src\\components\\form\\InputText.jsx";



function InputText({
  // 받아올 prop값들 객체형식으로 적기, 이곳에 값을 지정하면 스토리북에서 default값으로 지정이된다.
  width = "100%",
  backgroundColor = "#FFF",
  placeholder,
  unit,
  tit,
  color,
  border,
  padding,
  fontSize
}) {
  let style;
  if (tit) {
    style = {
      width,
      padding,
      border,
      backgroundColor,
      display: 'flex',
      alignItems: 'center',
      borderRadius: '8px',
      display: 'flex',
      gap: '16px',
      justifyContent: 'space-between',
      marginTop: '8px'
    };
  } else {
    style = {
      width,
      padding,
      border,
      backgroundColor,
      display: 'flex',
      alignItems: 'center',
      borderRadius: '8px',
      display: 'flex',
      gap: '16px',
      justifyContent: 'space-between'
    };
  }
  const style2 = {
    border: 'none',
    width: '100%'
  };
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      className: "tit",
      children: tit
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 7
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      style: style,
      className: "ui-input-set",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("input", {
        style: style2,
        type: "text",
        placeholder: placeholder
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 56,
        columnNumber: 9
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
        children: unit
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 56,
        columnNumber: 71
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 7
    }, this)]
  }, void 0, true);
}
_c = InputText;
InputText.propTypes = {
  // prop1 : PropTypes.string // 프롭타입.타입
};
InputText.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "InputText",
  "props": {
    "width": {
      "defaultValue": {
        "value": "\"100%\"",
        "computed": false
      },
      "required": false
    },
    "backgroundColor": {
      "defaultValue": {
        "value": "\"#FFF\"",
        "computed": false
      },
      "required": false
    }
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "InputText");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});