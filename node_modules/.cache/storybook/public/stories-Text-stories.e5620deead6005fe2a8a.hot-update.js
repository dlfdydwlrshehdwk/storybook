"use strict";
globalThis["webpackHotUpdatestorybook"]("stories-Text-stories",{

/***/ "./src/components/layout/Text.jsx":
/*!****************************************!*\
  !*** ./src/components/layout/Text.jsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Text)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");



function Text({
  label,
  fontSize,
  fontWeight,
  color
}) {
  const style = {
    fontSize,
    fontWeight,
    color
  };
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false);
}
_c = Text;
Text.propTypes = {
  width: PropTypes.string,
  height: PropTypes.string,
  label: PropTypes.string,
  backgroundColor: PropTypes.string,
  color: PropTypes.string,
  fontWeight: PropTypes.oneOf([400, 500, 700]),
  onClick: PropTypes.func,
  border: PropTypes.bool,
  borderRadius: PropTypes.string
};
Text.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "Text",
  "props": {
    "width": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.string"
      },
      "required": false
    },
    "height": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.string"
      },
      "required": false
    },
    "label": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.string"
      },
      "required": false
    },
    "backgroundColor": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.string"
      },
      "required": false
    },
    "color": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.string"
      },
      "required": false
    },
    "fontWeight": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.oneOf([400,500,700])"
      },
      "required": false
    },
    "onClick": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.func"
      },
      "required": false
    },
    "border": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.bool"
      },
      "required": false
    },
    "borderRadius": {
      "description": "",
      "type": {
        "name": "custom",
        "raw": "PropTypes.string"
      },
      "required": false
    }
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Text");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});