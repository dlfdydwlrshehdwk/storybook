"use strict";
globalThis["webpackHotUpdatestorybook"]("stories-InputRadio-stories",{

/***/ "./src/components/form/InputRadio.jsx":
/*!********************************************!*\
  !*** ./src/components/form/InputRadio.jsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ InputRadio)
/* harmony export */ });
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "C:\\Users\\withere\\OneDrive\\\uBC14\uD0D5 \uD654\uBA74\\\uB0B4\uAE43\\storybook\\storybook\\src\\components\\form\\InputRadio.jsx";


function InputRadio({
  // 받아야 할 프롭값
  // 밸류( = label), 타입(체형고르는건지 뭐 다른거 고르는건지), id값
  value,
  type,
  id,
  name,
  check
}) {
  let checkF;
  let checkT;
  let style;
  if (type === 'size') {
    checkF = {
      width: '100%',
      borderRadius: '58px',
      border: '1px solid #DEE8EE',
      backgroundColor: '#FFF',
      textAlign: 'center'
    };
    checkT = {
      width: '100%',
      borderRadius: '58px',
      border: '1px solid black',
      backgroundColor: '#FFF',
      textAlign: 'center'
    };
    style = {
      color: "#222",
      fontSize: '16px',
      lineHeight: '137%',
      fontWeight: '500',
      letterSpacing: '-0.5px',
      padding: '18px 16px',
      cursor: 'pointer',
      display: 'block'
    };
  }
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("div", {
      style: check === true ? checkT : checkF,
      className: "ui-radio-set",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("input", {
        style: {
          display: 'none'
        },
        id: id,
        type: "radio",
        name: name,
        value: value
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 9
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)("label", {
        htmlFor: id,
        style: style,
        children: value
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 42,
        columnNumber: 9
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 7
    }, this)
  }, void 0, false);
}
_c = InputRadio;
InputRadio.propTypes = {
  // prop1 : PropTypes.string // 프롭타입.타입
};
InputRadio.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "InputRadio"
};
var _c;
__webpack_require__.$Refresh$.register(_c, "InputRadio");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});